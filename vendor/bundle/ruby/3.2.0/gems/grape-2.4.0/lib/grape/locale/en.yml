---
en:
  grape:
    errors:
      format: '%{attributes} %{message}'
      messages:
        all_or_none: 'provide all or none of parameters'
        at_least_one: 'are missing, at least one parameter must be provided'
        blank: 'is empty'
        coerce: 'is invalid'
        conflicting_types: 'query params contains conflicting types'
        empty_message_body: 'empty message body supplied with %{body_format} content-type'
        exactly_one: 'are missing, exactly one parameter must be provided'
        except_values: 'has a value not allowed'
        incompatible_option_values: '%{option1}: %{value1} is incompatible with %{option2}: %{value2}'
        invalid_accept_header:
          problem: 'invalid accept header'
          resolution: '%{message}'
        invalid_formatter: 'cannot convert %{klass} to %{to_format}'
        invalid_message_body:
          problem: 'message body does not match declared format'
          resolution: 'when specifying %{body_format} as content-type, you must pass valid %{body_format} in the request''s ''body'' '
        invalid_parameters: 'query params contains invalid format or byte sequence'
        invalid_response: 'Invalid response'
        invalid_version_header:
          problem: 'invalid version header'
          resolution: '%{message}'
        invalid_versioner_option:
          problem: 'unknown :using for versioner: %{strategy}'
          resolution: 'available strategy for :using is :path, :header, :accept_version_header, :param'
        invalid_with_option_for_represent:
          problem: 'you must specify an entity class in the :with option'
          resolution: 'eg: represent User, :with => Entity::User'
        length: 'is expected to have length within %{min} and %{max}'
        length_is: 'is expected to have length exactly equal to %{is}'
        length_max: 'is expected to have length less than or equal to %{max}'
        length_min: 'is expected to have length greater than or equal to %{min}'
        missing_group_type: 'group type is required'
        missing_mime_type:
          problem: 'missing mime type for %{new_format}'
          resolution: 'you can choose existing mime type from Grape::ContentTypes::CONTENT_TYPES or add your own with content_type :%{new_format}, ''application/%{new_format}'' '
        missing_option: 'you must specify :%{option} options'
        missing_vendor_option:
          problem: 'missing :vendor option'
          resolution: 'eg: version ''v1'', using: :header, vendor: ''twitter'''
          summary: 'when version using header, you must specify :vendor option'
        mutual_exclusion: 'are mutually exclusive'
        presence: 'is missing'
        regexp: 'is invalid'
        same_as: 'is not the same as %{parameter}'
        too_deep_parameters: 'query params are recursively nested over the specified limit (%{limit})'
        too_many_multipart_files: 'the number of uploaded files exceeded the system''s configured limit (%{limit})'
        unknown_auth_strategy: 'unknown auth strategy: %{strategy}'
        unknown_options: 'unknown options: %{options}'
        unknown_parameter: 'unknown parameter: %{param}'
        unknown_params_builder: 'unknown params_builder: %{params_builder_type}'
        unknown_validator: 'unknown validator: %{validator_type}'
        unsupported_group_type: 'group type must be Array, Hash, JSON or Array[JSON]'
        values: 'does not have a valid value'
