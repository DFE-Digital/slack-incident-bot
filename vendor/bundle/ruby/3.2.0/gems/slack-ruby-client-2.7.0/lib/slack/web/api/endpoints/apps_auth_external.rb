# frozen_string_literal: true
# This file was auto-generated by lib/tasks/web.rake

module Slack
  module Web
    module Api
      module Endpoints
        module AppsAuthExternal
          #
          # Delete external auth tokens only on the Slack side
          #
          # @option options [string] :app_id
          #   The id of the app whose tokens you want to delete.
          # @option options [string] :external_token_id
          #   The id of the token that you want to delete.
          # @option options [string] :provider_key
          #   The provider key of the provider whose tokens you want to delete.
          # @see https://api.slack.com/methods/apps.auth.external.delete
          # @see https://github.com/slack-ruby/slack-api-ref/blob/master/methods/apps.auth.external/apps.auth.external.delete.json
          def apps_auth_external_delete(options = {})
            post('apps.auth.external.delete', options)
          end

          #
          # Get the access token for the provided token ID
          #
          # @option options [string] :external_token_id
          #   The id of the token you want to get the token for.
          # @option options [boolean] :force_refresh
          #   Always refresh existing token before returning even when the token has not expired.
          # @see https://api.slack.com/methods/apps.auth.external.get
          # @see https://github.com/slack-ruby/slack-api-ref/blob/master/methods/apps.auth.external/apps.auth.external.get.json
          def apps_auth_external_get(options = {})
            raise ArgumentError, 'Required arguments :external_token_id missing' if options[:external_token_id].nil?
            post('apps.auth.external.get', options)
          end
        end
      end
    end
  end
end
