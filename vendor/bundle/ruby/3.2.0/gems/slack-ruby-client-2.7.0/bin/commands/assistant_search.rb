# frozen_string_literal: true
# This file was auto-generated by lib/tasks/web.rake

module Slack
  module Cli
    class App
      desc 'AssistantSearch methods.'
      command 'assistant_search' do |g|
        g.desc 'Searches messages across your Slack organization—perfect for broad, specific, and real-time data retrieval.'
        g.long_desc %( Searches messages across your Slack organization—perfect for broad, specific, and real-time data retrieval. )
        g.command 'context' do |c|
          c.flag 'query', desc: 'User prompt or search query.'
          c.flag 'action_token', desc: 'Send action_token as received in a message event.'
          c.flag 'channel_types', desc: 'Mix and match channel types by providing a comma-separated list of any combination of public_channel, private_channel, mpim, im.'
          c.flag 'content_types', desc: 'Content types to include, a comma-separated list of any combination of messages, files.'
          c.flag 'context_channel_id', desc: 'Context channel ID to support scoping the search when applicable.'
          c.flag 'cursor', desc: 'The cursor returned by the API. Leave this blank for the first request, and use this to get the next page of results.'
          c.flag 'include_bots', desc: 'If you want the results to include bots.'
          c.flag 'limit', desc: 'Number of results to return, up to a max of 20. Defaults to 20.'
          c.action do |_global_options, options, _args|
            puts JSON.dump(@client.assistant_search_context(options))
          end
        end
      end
    end
  end
end
