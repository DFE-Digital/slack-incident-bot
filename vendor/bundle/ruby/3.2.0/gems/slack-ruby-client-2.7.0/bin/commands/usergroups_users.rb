# frozen_string_literal: true
# This file was auto-generated by lib/tasks/web.rake

module Slack
  module Cli
    class App
      desc 'UsergroupsUsers methods.'
      command 'usergroups_users' do |g|
        g.desc 'List all users in a User Group.'
        g.long_desc %( List all users in a User Group. )
        g.command 'list' do |c|
          c.flag 'usergroup', desc: 'The encoded ID of the User Group to list users for.'
          c.flag 'include_disabled', desc: 'Allow results that involve disabled User Groups.'
          c.flag 'team_id', desc: 'encoded team id where the user group exists, required if org token is used.'
          c.action do |_global_options, options, _args|
            puts JSON.dump(@client.usergroups_users_list(options))
          end
        end

        g.desc 'Update the list of users for a user group.'
        g.long_desc %( Update the list of users for a user group. )
        g.command 'update' do |c|
          c.flag 'usergroup', desc: 'The encoded ID of the user group to update.'
          c.flag 'users', desc: 'A comma separated string of encoded user IDs that represent the entire list of users for the user group.'
          c.flag 'additional_channels', desc: 'A comma separated string of encoded channel IDs for which the User Group can custom add usergroup members too.'
          c.flag 'include_count', desc: 'Include the number of users in the user group.'
          c.flag 'is_shared', desc: 'Boolean to identify if the API is getting called when a shared section is getting shared.'
          c.flag 'team_id', desc: 'encoded team id where the user group exists, required if org token is used.'
          c.action do |_global_options, options, _args|
            puts JSON.dump(@client.usergroups_users_update(options))
          end
        end
      end
    end
  end
end
